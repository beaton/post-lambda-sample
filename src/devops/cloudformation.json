{
   "AWSTemplateFormatVersion": "2010-09-09T00:00:00.000Z",
   "Description": "Sample API Gateway with a simply python Lambda function to return the user's ip address.",
   "Parameters": {
      "apiGatewayName": {
         "Type": "String",
         "Default": "my-api"
      },
      "apiGatewayStageName": {
         "Type": "String",
         "AllowedPattern": "[a-z0-9]+",
         "Default": "my-gateway"
      },
      "apiGatewayHTTPMethod": {
         "Type": "String",
         "Default": "POST"
      },
      "lambdaFunctionName": {
         "Type": "String",
         "AllowedPattern": "[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+",
         "Default": "my-function"
      }
   },
   "Resources": {
      "apiGateway": {
         "Type": "AWS::ApiGateway::RestApi",
         "Properties": {
            "Description": "API Gateway to police traffic into the backend services.",
            "EndpointConfiguration": {
               "Types": [
                  "REGIONAL"
               ]
            },
            "Name": null
         }
      },
      "apiGatewayRootMethod": {
         "Type": "AWS::ApiGateway::Method",
         "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": null,
            "Integration": {
               "IntegrationHttpMethod": "POST",
               "Type": "AWS_PROXY",
               "Uri": null
            },
            "ResourceId": null,
            "RestApiId": null
         }
      },
      "apiGatewayDeployment": {
         "Type": "AWS::ApiGateway::Deployment",
         "DependsOn": [
            "apiGatewayRootMethod"
         ],
         "Properties": {
            "RestApiId": null,
            "StageName": null
         }
      },
      "lambdaFunction": {
         "Type": "AWS::Lambda::Function",
         "Properties": {
            "Code": {
               "ZipFile": "def handler(event,context):\n  return {\n    'body': 'Hello there {0}'.format(event['requestContext']['identity']['sourceIp']),\n    'headers': {\n      'Content-Type': 'text/plain'\n    },\n    'statusCode': 200\n  }\n"
            },
            "Description": "Example Lambda function",
            "FunctionName": null,
            "Handler": "index.handler",
            "MemorySize": 128,
            "Role": null,
            "Runtime": "python3.8"
         }
      },
      "lambdaApiGatewayInvoke": {
         "Type": "AWS::Lambda::Permission",
         "Properties": {
            "Action": "lambda:InvokeFunction",
            "FunctionName": null,
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": null
         }
      },
      "lambdaIAMRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17T00:00:00.000Z",
               "Statement": [
                  {
                     "Action": [
                        "sts:AssumeRole"
                     ],
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [
                           "lambda.amazonaws.com"
                        ]
                     }
                  }
               ]
            },
            "Policies": [
               {
                  "PolicyDocument": {
                     "Version": "2012-10-17T00:00:00.000Z",
                     "Statement": [
                        {
                           "Action": [
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents"
                           ],
                           "Effect": "Allow",
                           "Resource": [
                              null
                           ]
                        }
                     ]
                  },
                  "PolicyName": "lambda"
               }
            ]
         }
      },
      "lambdaLogGroup": {
         "Type": "AWS::Logs::LogGroup",
         "Properties": {
            "LogGroupName": null,
            "RetentionInDays": 5
         }
      }
   },
   "Outputs": {
      "apiGatewayInvokeURL": {
         "Value": null
      },
      "lambdaArn": {
         "Value": null
      }
   }
}